name: Build and Release
on:
  push:
    tags:
      - 'v*'
env:
  GODOT_VERSION: 4.5
  EXPORT_NAME: space-invaders-clone
  PROJECT_PATH: "."
  ITCH_USER_NAME: modailun
  ITCH_GAME_NAME: space-invaders-clone
jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:4.5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web

  github-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Get version from tag
        run: |
          TAGVERSION=$(git describe --tags --abbrev=0)
          echo "TAGVERSION=${TAGVERSION:1}" >> $GITHUB_ENV
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: build/linux
      - name: Download Web artifact
        uses: actions/download-artifact@v4
        with:
          name: web
          path: build/web
      - name: Zip Windows build
        run: |
          cd build/windows
          zip -r ../${{ env.EXPORT_NAME }}-windows-${{ env.TAGVERSION }}.zip .
      - name: Zip Linux build
        run: |
          cd build/linux
          zip -r ../${{ env.EXPORT_NAME }}-linux-${{ env.TAGVERSION }}.zip .
      - name: Zip Web build
        run: |
          cd build/web
          zip -r ../${{ env.EXPORT_NAME }}-web-${{ env.TAGVERSION }}.zip .
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ env.TAGVERSION }}
          body: |
            **Changelog for ${{ env.TAGVERSION }}**
            - Added sound effects and background music.
            - Added particle effects.
            - Added screen shake effect.
          files: |
            build/${{ env.EXPORT_NAME }}-windows-${{ env.TAGVERSION }}.zip
            build/${{ env.EXPORT_NAME }}-linux-${{ env.TAGVERSION }}.zip
            build/${{ env.EXPORT_NAME }}-web-${{ env.TAGVERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  itch-release:
    name: Release to itch.io
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Get version from tag
        run: |
          TAGVERSION=$(git describe --tags --abbrev=0)
          echo "TAGVERSION=${TAGVERSION:1}" >> $GITHUB_ENV
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: build/linux
      - name: Download Web artifact
        uses: actions/download-artifact@v4
        with:
          name: web
          path: build/web
      - name: Zip Windows build
        run: |
          cd build/windows
          zip -r ../${{ env.EXPORT_NAME }}-windows-${{ env.TAGVERSION }}.zip .
      - name: Zip Linux build
        run: |
          cd build/linux
          zip -r ../${{ env.EXPORT_NAME }}-linux-${{ env.TAGVERSION }}.zip .
      - name: Zip Web build
        run: |
          cd build/web
          zip -r ../${{ env.EXPORT_NAME }}-web-${{ env.TAGVERSION }}.zip .
      - name: Publish Windows build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: windows
          ITCH_GAME: ${{ env.ITCH_GAME_NAME }}
          ITCH_USER: ${{ env.ITCH_USER_NAME }}
          PACKAGE: build/${{ env.EXPORT_NAME }}-windows-${{ env.TAGVERSION }}.zip
          VERSION: ${{ env.TAGVERSION }}
      - name: Publish Linux build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: linux
          ITCH_GAME: ${{ env.ITCH_GAME_NAME }}
          ITCH_USER: ${{ env.ITCH_USER_NAME }}
          PACKAGE: build/${{ env.EXPORT_NAME }}-linux-${{ env.TAGVERSION }}.zip
          VERSION: ${{ env.TAGVERSION }}
      - name: Publish Web build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: web
          ITCH_GAME: ${{ env.ITCH_GAME_NAME }}
          ITCH_USER: ${{ env.ITCH_USER_NAME }}
          PACKAGE: build/${{ env.EXPORT_NAME }}-web-${{ env.TAGVERSION }}.zip
          VERSION: ${{ env.TAGVERSION }}